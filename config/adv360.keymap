/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        t1: t1 {
            compatible = "zmk,behavior-tap-dance";
            label = "T1";
            #binding-cells = <0>;
            bindings =
                <&kp N1>,
                <&kp LC(LA(LS(KP_NUMBER_1)))>,
                <&kp LS(LA(LC(LG(KP_NUMBER_1))))>;
        };

        t2: t2 {
            compatible = "zmk,behavior-tap-dance";
            label = "T2";
            #binding-cells = <0>;
            bindings =
                <&kp N2>,
                <&kp LC(LA(LS(KP_NUMBER_2)))>,
                <&kp LS(LA(LC(LG(KP_NUMBER_2))))>;
        };

        t3: t3 {
            compatible = "zmk,behavior-tap-dance";
            label = "T3";
            #binding-cells = <0>;
            bindings =
                <&kp N3>,
                <&kp LC(LA(LS(KP_NUMBER_3)))>,
                <&kp LS(LA(LC(LG(KP_NUMBER_3))))>;
        };

        t4: t4 {
            compatible = "zmk,behavior-tap-dance";
            label = "T4";
            #binding-cells = <0>;
            bindings =
                <&kp N4>,
                <&kp LC(LA(LS(KP_NUMBER_4)))>,
                <&kp LS(LA(LC(LG(KP_NUMBER_4))))>;
        };

        t5: t5 {
            compatible = "zmk,behavior-tap-dance";
            label = "T5";
            #binding-cells = <0>;
            bindings =
                <&kp N5>,
                <&kp LC(LA(LS(KP_NUMBER_5)))>,
                <&kp LS(LA(LC(LG(KP_NUMBER_5))))>;
        };

        t6: t6 {
            compatible = "zmk,behavior-tap-dance";
            label = "T6";
            #binding-cells = <0>;
            bindings =
                <&kp N6>,
                <&kp LC(LA(LS(KP_NUMBER_6)))>,
                <&kp LS(LA(LC(LG(KP_NUMBER_6))))>;
        };

        t7: t7 {
            compatible = "zmk,behavior-tap-dance";
            label = "T7";
            #binding-cells = <0>;
            bindings =
                <&kp N7>,
                <&kp LC(LA(LS(KP_NUMBER_7)))>,
                <&kp LS(LA(LC(LG(KP_NUMBER_7))))>;
        };

        t8: t8 {
            compatible = "zmk,behavior-tap-dance";
            label = "T8";
            #binding-cells = <0>;
            bindings =
                <&kp N8>,
                <&kp LC(LA(LS(KP_NUMBER_8)))>,
                <&kp LS(LA(LC(LG(KP_NUMBER_8))))>;
        };

        t9: t9 {
            compatible = "zmk,behavior-tap-dance";
            label = "T9";
            #binding-cells = <0>;
            bindings =
                <&kp N9>,
                <&kp LC(LA(LS(KP_NUMBER_9)))>,
                <&kp LS(LA(LC(LG(KP_NUMBER_9))))>;
        };

        t0: t0 {
            compatible = "zmk,behavior-tap-dance";
            label = "T0";
            #binding-cells = <0>;
            bindings =
                <&kp N0>,
                <&kp LC(LA(LS(KP_NUMBER_0)))>,
                <&kp LS(LA(LC(LG(KP_NUMBER_0))))>;
        };
    };

    combos {
        compatible = "zmk,combos";

        quickesc {
            bindings = <&kp ESCAPE>;
            key-positions = <42 43>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE   &t1    &t2    &t3    &t4        &t5    &none                                                                                                &mo 3      &t6    &t7    &t8        &t9       &t0       &kp MINUS
&kp TAB     &kp Q  &kp W  &kp E  &kp R      &kp T  &none                                                                                                &none      &kp Y  &kp U  &kp I      &kp O     &kp P     &kp BSLH
&kp ESCAPE  &kp A  &kp S  &kp D  &kp F      &kp G  &kp MINUS      &kp LEFT_ALT  &kp LS(LC(LA(LEFT_GUI)))      &kp RS(RC(RA(RIGHT_GUI)))  &kp RIGHT_ALT  &kp MINUS  &kp H  &kp J  &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C  &kp V      &kp B                               &kp LC(LA(LEFT_GUI))          &kp RC(RA(RIGHT_GUI))                                &kp N  &kp M  &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&kp LCTRL   &mo 5  &mo 1  &none  &kp MINUS         &kp BACKSPACE  &kp DELETE    &kp RGUI                      &kp LGUI                   &kp ENTER      &kp SPACE         &mo 2  &none      &kp LBKT  &kp RBKT  &kp RCTRL
            >;
        };

        layer_Nav {
            bindings = <
&none      &none   &none   &none  &none  &none  &none                                                                   &trans  &none           &none           &none         &none            &none  &none
&kp TAB    &none   &none   &none  &none  &none  &none                                                                   &none   &none           &none           &none         &none            &none  &none
&none      &none   &none   &none  &none  &none  &none  &kp LEFT_ALT  &kp LA(LSHFT)         &kp RA(RSHFT)      &kp RALT  &none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none  &none
&kp LSHFT  &none   &none   &none  &none  &none                       &none                 &none                                &none           &none           &none         &none            &none  &kp RSHFT
&kp LCTRL  &trans  &trans  &none  &none         &none  &none         &kp LEFT_COMMAND      &kp RIGHT_COMMAND  &none     &none                   &trans          &none         &none            &none  &kp RCTRL
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &none                                  &trans  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&none   &none   &none   &none   &none   &none   &none                                  &none   &none   &none   &none   &none    &none    &none
&none   &none   &none   &none   &none   &none   &none  &none  &none      &none  &none  &none   &none   &none   &none   &none    &none    &none
&none   &none   &none   &none   &none   &none                 &none      &none                 &none   &none   &none   &none    &none    &none
&none   &trans  &trans  &none   &none           &none  &none  &none      &none  &none  &none           &trans  &none   &none    &none    &none
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &trans        &trans        &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_Mouse {
            bindings = <
&none  &none   &none   &none  &none  &none  &none                                  &trans  &none  &none   &none  &none  &none  &none
&none  &none   &none   &none  &none  &none  &none                                  &none   &none  &none   &none  &none  &none  &none
&none  &none   &none   &none  &none  &none  &none  &none  &none      &none  &none  &none   &none  &none   &none  &none  &none  &none
&none  &none   &none   &none  &none  &none                &none      &none                 &none  &none   &none  &none  &none  &none
&none  &trans  &trans  &none  &none         &none  &none  &none      &none  &none  &none          &trans  &none  &none  &none  &none
            >;
        };

        layer_Volume {
            bindings = <
&none  &none   &none   &none  &none  &none  &none                                  &trans      &none  &none              &none         &none  &none  &none
&none  &none   &none   &none  &none  &none  &none                                  &none       &none  &none              &none         &none  &none  &none
&none  &none   &none   &none  &none  &none  &none  &none  &none      &none  &none  &none       &none  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &none  &none  &none
&none  &none   &none   &none  &none  &none                &none      &none                     &none  &none              &none         &none  &none  &none
&none  &trans  &trans  &none  &none         &none  &none  &none      &none  &none  &kp C_MUTE         &trans             &none         &none  &none  &none
            >;
        };
    };
};
