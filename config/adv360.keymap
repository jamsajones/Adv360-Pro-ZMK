/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-unless-interrupted";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
        };

        t1: t1 {
            compatible = "zmk,behavior-tap-dance";
            label = "T1";
            #binding-cells = <0>;
            bindings = <&kp N1>, <&kp LC(LA(LG(N1)))>, <&kp LS(LC(LA(LG(N1))))>;

            tapping-term-ms = <150>;
        };

        t2: t2 {
            compatible = "zmk,behavior-tap-dance";
            label = "T2";
            #binding-cells = <0>;
            bindings = <&kp N2>, <&kp LC(LA(LG(N2)))>, <&kp LS(LC(LA(LG(N2))))>;
            tapping-term-ms = <150>;
        };

        t3: t3 {
            compatible = "zmk,behavior-tap-dance";
            label = "T3";
            #binding-cells = <0>;
            bindings = <&kp N3>, <&kp LC(LA(LG(N3)))>, <&kp LS(LC(LA(LG(N3))))>;
            tapping-term-ms = <150>;
        };

        t4: t4 {
            compatible = "zmk,behavior-tap-dance";
            label = "T4";
            #binding-cells = <0>;
            bindings = <&kp N4>, <&kp LC(LA(LG(N4)))>, <&kp LS(LC(LA(LG(N4))))>;
            tapping-term-ms = <150>;
        };

        t5: t5 {
            compatible = "zmk,behavior-tap-dance";
            label = "T5";
            #binding-cells = <0>;
            bindings = <&kp N5>, <&kp LC(LA(LG(N5)))>, <&kp LS(LC(LA(LG(N5))))>;
            tapping-term-ms = <150>;
        };

        t6: t6 {
            compatible = "zmk,behavior-tap-dance";
            label = "T6";
            #binding-cells = <0>;
            bindings = <&kp N6>, <&kp LC(LA(LG(N6)))>, <&kp LS(LC(LA(LG(N6))))>;
            tapping-term-ms = <150>;
        };

        t7: t7 {
            compatible = "zmk,behavior-tap-dance";
            label = "T7";
            #binding-cells = <0>;
            bindings = <&kp N7>, <&kp LC(LA(LG(N7)))>, <&kp LS(LC(LA(LG(N7))))>;
            tapping-term-ms = <150>;
        };

        t8: t8 {
            compatible = "zmk,behavior-tap-dance";
            label = "T8";
            #binding-cells = <0>;
            bindings = <&kp N8>, <&kp LC(LA(LG(N8)))>, <&kp LS(LC(LA(LG(N8))))>;
            tapping-term-ms = <150>;
        };

        t9: t9 {
            compatible = "zmk,behavior-tap-dance";
            label = "T9";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp LC(LA(LG(N9)))>, <&kp LS(LC(LA(LG(N9))))>;
            tapping-term-ms = <150>;
        };

        t0: t0 {
            compatible = "zmk,behavior-tap-dance";
            label = "T0";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp LC(LA(LG(N0)))>, <&kp LS(LC(LA(LG(N0))))>;
            tapping-term-ms = <150>;
        };

        rhm: rhm {
            compatible = "zmk,behavior-hold-tap";
            label = "RHM";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-unless-interrupted";
            bindings = <&kp>, <&kp>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 46 47 48 49 50 51 52 60 61 62 63 64 65 66 67>;
        };

        lhm: lhm {
            compatible = "zmk,behavior-hold-tap";
            label = "LHM";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-unless-interrupted";
            bindings = <&kp>, <&kp>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 54 55 56 57 58 59 69 70 71 72 73 74 75 37 38 53 68 69>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE   &kp 1                  &kp 2              &kp 3              &kp 4                &kp 5    &none                                                                                                &mo 5      &kp 6    &kp 7                 &kp 8                &kp 9              &kp 0                     &kp EQUAL
&kp TAB     &kp Q                &kp W            &kp E            &kp R              &kp T  &none                                                                                                &none      &kp Y  &kp U               &kp I              &kp O            &kp P                   &kp BSLH
&kp ESCAPE  &kp A  &kp S  &kp D  &kp F  &kp G  &kp MINUS      &kp LEFT_ALT  &kp LS(LC(LA(LEFT_GUI)))      &kp RS(RC(RA(RIGHT_GUI)))  &kp RIGHT_ALT  &kp MINUS  &kp H  &kp J  &kp K   &kp L  &kp SEMI  &kp SQT
&kp LSHFT   &kp Z                &kp X            &kp C            &kp V              &kp B                               &kp LC(LA(LEFT_GUI))          &kp RC(RA(RIGHT_GUI))                                &kp N  &kp M               &kp COMMA          &kp DOT          &kp FSLH                &kp RSHFT
&kp LCTRL   &none                &mo 3            &none            &mo 1                     &kp BACKSPACE  &kp DELETE    &kp RGUI                      &kp LGUI                   &kp ENTER      &kp SPACE         &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &mo 3            &none                   &kp RCTRL
            >;
        };

        layer_Nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans          &trans          &trans        &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans          &trans          &trans        &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans          &trans          &trans        &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans                  &trans          &trans        &trans           &trans  &trans
            >;
        };

        layer_Mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &trans                                      &trans      &kp F7  &kp F8           &kp F9        &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans      &trans  &trans           &trans        &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans      &trans  &kp C_VOLUME_UP  &kp C_VOL_DN  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                      &trans  &kp C_STOP       &trans        &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &kp C_MUTE          &trans           &trans        &trans   &trans   &trans
            >;
        };

        layer_Volume {
            bindings = <
&none  &none   &none   &none  &none  &none  &none                                  &trans      &none  &none              &none         &none  &none  &none
&none  &none   &none   &none  &none  &none  &none                                  &none       &none  &none              &none         &none  &none  &none
&none  &none   &none   &none  &none  &none  &none  &none  &none      &none  &none  &none       &none  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &none  &none  &none
&none  &none   &none   &none  &none  &none                &none      &none                     &none  &none              &none         &none  &none  &none
&none  &trans  &trans  &none  &none         &none  &none  &none      &none  &none  &kp C_MUTE         &trans             &none         &none  &none  &none
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &trans        &trans        &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
